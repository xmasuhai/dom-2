{"version":3,"sources":["main.js"],"names":["y","jQuery","children","print"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AACA;;;;;;;;;AAQA;;;;;;;;;AAUA;AACA;;AAEA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAMA,CAAC,GAAGC,MAAM,CAAC,OAAD,CAAhB;AACAD,CAAC,CAACE,QAAF,GAAaC,KAAb","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// window.jQuery() // 全局变量可去掉 window.\r\n// jQuery()\r\n// const api = jQuery()\r\n// const api = window.jQuery()\r\n\r\n/* test1 */\r\n/*\r\nconst api = jQuery('.test') // 不返回 元素们，返回 api 对象\r\napi.addClass('red') // 遍历所有刚才获取的元素，添加 .red 样式\r\napi.addClass('green').addClass('blue') // 链式操作\r\napi.addClass('white')\r\n    .addClass('green')\r\n    .addClass('blue') // 链式骚操作\r\n     */\r\n/* 另一个骚操作\r\n ** 函数 如果用一个 对象 来调用\r\n ** 那么这个 函数里面的 this 就是 前面那个对象\r\n ** obj.fn(p1) // 函数里的 this 就是 obj 隐式调用\r\n ** obj.fn.call(obj, p1)\r\n **\r\n ** api.addClass('red') // this 就是 api // return api === return this\r\n **\r\n */\r\n\r\n// 省略变量名，直接创建匿名的对象 来链式操作\r\n// jQuery('.test').addClass('typeA').addClass('typeB').addClass('typeC')\r\n\r\n/* 查 */\r\n/* find */\r\n// const x1 = jQuery('.test1').find('.child')\r\n// console.log(x1)\r\n/* test2 */\r\n// const x2 = jQuery('.test').find('.child')\r\n// console.log(x2)\r\n\r\n/* test3 */\r\n// const api1 = jQuery('.test')\r\n// api1.addClass('black')\r\n// const api2 = api1.find('.child').addClass('gray') // 影响同一个elements的引用\r\n// api1.addClass('cyan')\r\n// jQuery('.test').find('.child').addClass('yellow') // 简化\r\n\r\n/* test3 */\r\n// const api1 = jQuery('.test')\r\n// const api2 = api1.find('.child').addClass('red').addClass('blue')\r\n// const oldApi = api2.end().addClass('yellow')\r\n// jQuery('.test').find('.child').addClass('red').addClass('blue').end().addClass('yellow')\r\n\r\n// /* test4 */\r\n// const xx = jQuery('.test').find('.child')\r\n// xx.each((div) => {\r\n//     console.log(div)\r\n// })\r\n// // xx.parent().print()\r\n\r\n/* test5 */\r\nconst y = jQuery('.test')\r\ny.children().print()"]}